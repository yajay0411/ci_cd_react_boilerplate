name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  setup-and-validate:
    name: Setup and Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Linting and Type Checking
        run: npm run validate

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup-and-validate
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Unit Tests with Coverage
        run: npm test -- --coverage --run

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: setup-and-validate
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'
      - name: Install Dependencies
        run: |
          npm ci
          npx playwright install --with-deps
      - name: Run E2E Tests
        run: npm run test:e2e

  build:
    name: Build Production
    needs: [unit-tests, e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Build Production
        run: npm run build:production
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  deploy:
    name: Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - name: Deploy with Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
